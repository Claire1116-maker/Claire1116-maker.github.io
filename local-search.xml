<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/02/07/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/02/07/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><p><img src="/R.png" alt="图片引用方法二"><br><img src="/images/R.png" alt="图片引用方法二"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/07/hello-world/"/>
    <url>/2025/02/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2025/02/07/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2025/02/07/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="re-match函数"><a href="#re-match函数" class="headerlink" title="# re.match函数"></a># re.match函数</h1><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">re.<span class="hljs-keyword">match</span>(pattern,string,flags=<span class="hljs-number">0</span>)<br>re.search(pattern, string, flags=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>panttern</td><td>匹配的正则表达式</td></tr><tr><td>string</td><td>匹配的字符串</td></tr><tr><td>flags</td><td>控制正则表达式的匹配方式</td></tr></tbody></table><p>匹配成功返回一个匹配对象，否则返回None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><br>re.<span class="hljs-keyword">match</span>(<span class="hljs-string">&#x27;www&#x27;</span>, <span class="hljs-string">&#x27;www.runoob.com&#x27;</span>).span()<br><span class="hljs-comment">#从字符串开头开始匹配，span()方法返回匹配的起始和结束位置</span><br><span class="hljs-comment">#输出：（0，3）</span><br>re.<span class="hljs-keyword">match</span>(<span class="hljs-string">&#x27;com&#x27;</span>, <span class="hljs-string">&#x27;www.runoob.com&#x27;</span>)<br><span class="hljs-comment">#匹配失败输出None</span><br><br><br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-built_in">print</span>(re.search(<span class="hljs-string">&#x27;www&#x27;</span>, <span class="hljs-string">&#x27;www.runoob.com&#x27;</span>).span())  <span class="hljs-comment"># 在任意位置匹配</span><br><span class="hljs-built_in">print</span>(re.search(<span class="hljs-string">&#x27;com&#x27;</span>, <span class="hljs-string">&#x27;www.runoob.com&#x27;</span>).span())  <span class="hljs-comment"># 在任意位置匹配</span><br><span class="hljs-comment">#输出</span><br>(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>)<br>(<span class="hljs-number">11</span>, <span class="hljs-number">14</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#(.*)：贪婪匹配，捕获 &quot;are&quot; 前面的所有内容。</span><br><br><span class="hljs-comment">#are：匹配固定的 &quot;are&quot;。</span><br><br><span class="hljs-comment">#(.*?)：非贪婪匹配，捕获 &quot;are&quot; 后面的内容，直到遇到空格。</span><br><br><span class="hljs-comment">#.*：贪婪匹配，捕获剩余的所有内容。</span><br><span class="hljs-keyword">import</span> re<br><br>line = <span class="hljs-string">&quot;Cats are smarter than dogs&quot;</span><br>matchObj = re.<span class="hljs-keyword">match</span>( <span class="hljs-string">r&#x27;(.*) are (.*?) (.*)&#x27;</span>, line, re.M|re.I)<br><br><span class="hljs-keyword">if</span> matchObj:<br><br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;matchObj.group() : &quot;</span>, matchObj.group())<br><br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;matchObj.group(1) : &quot;</span>, matchObj.group(<span class="hljs-number">1</span>))<br><br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;matchObj.group(2) : &quot;</span>, matchObj.group(<span class="hljs-number">2</span>))<br><br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;matchObj.group(3) : &quot;</span>, matchObj.group(<span class="hljs-number">3</span>))<br><br><span class="hljs-keyword">else</span>:<br><br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;No match!!&quot;</span>)<br><span class="hljs-comment">#答案</span><br>matchObj.group() :  Cats are smarter than dogs<br>matchObj.group(<span class="hljs-number">1</span>) :  Cats<br>matchObj.group(<span class="hljs-number">2</span>) :  smarter<br>matchObj.group(<span class="hljs-number">3</span>) :  than dogss<br><br><br><span class="hljs-keyword">import</span> re<br> <br>line = <span class="hljs-string">&quot;Cats are smarter than dogs&quot;</span><br> <br>matchObj = re.<span class="hljs-keyword">match</span>( <span class="hljs-string">r&#x27;dogs&#x27;</span>, line, re.M|re.I)<br><span class="hljs-keyword">if</span> matchObj:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;match --&gt; matchObj.group() : &quot;</span>, matchObj.group())<br><span class="hljs-keyword">else</span>:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;No match!!&quot;</span>)<br><br>matchObj = re.search( <span class="hljs-string">r&#x27;dogs&#x27;</span>, line, re.M|re.I)<br><span class="hljs-keyword">if</span> matchObj:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;search --&gt; matchObj.group() : &quot;</span>, matchObj.group())<br><span class="hljs-keyword">else</span>:<br>   <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;No match!!&quot;</span>)<br><span class="hljs-comment">#答案</span><br>No <span class="hljs-keyword">match</span>!!<br>search --&gt; matchObj.group() :  dogs<br></code></pre></td></tr></table></figure><h1 id="检索和替换"><a href="#检索和替换" class="headerlink" title="检索和替换"></a>检索和替换</h1><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">re.sub(pattern, repl, string, count=<span class="hljs-number">0</span>, flags=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>pattern</td><td>正则中的模式字符串</td></tr><tr><td>repl</td><td>替换的字符串</td></tr><tr><td>string</td><td>要被查找替换的原字符串</td></tr><tr><td>count</td><td>模式匹配后最大的替换次数，默认0表示替换所有的匹配</td></tr><tr><td>flags</td><td>编译时用的匹配模式</td></tr></tbody></table><p>前三个为必选参数，后两个为可选参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br> <br>phone = <span class="hljs-string">&quot;2004-959-559 # 这是一个电话号码&quot;</span><br> <span class="hljs-comment">#&#x27;#&#x27;：匹配字符 #。</span><br> <span class="hljs-comment">#&#x27;.*&#x27;：匹配任意字符（除换行符外）零次或多次。</span><br> <span class="hljs-comment">#&#x27;$&#x27;：匹配字符串的结尾。</span><br> <span class="hljs-comment">#这个正则表达式的作用是匹配从&#x27;#&#x27;开始到字符串结尾的所有内容。删除注释</span><br>num = re.sub(<span class="hljs-string">r&#x27;#.*$&#x27;</span>, <span class="hljs-string">&quot;&quot;</span>, phone)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;电话号码 : &quot;</span>, num)<br> <br><span class="hljs-comment"># 移除非数字的内容</span><br><span class="hljs-comment">#&#x27;\D&#x27;表示匹配任何非数字字符</span><br>num = re.sub(<span class="hljs-string">r&#x27;\D&#x27;</span>, <span class="hljs-string">&quot;&quot;</span>, phone)<br><span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;电话号码 : &quot;</span>, num)<br><br></code></pre></td></tr></table></figure><p>以上结果：</p><p>电话号码 :  2004-959-559<br>电话号码 :  2004959559</p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
